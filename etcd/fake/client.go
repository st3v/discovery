// This file was generated by counterfeiter
package fake

import (
	"sync"

	"github.com/coreos/go-etcd/etcd"
)

type EtcdClient struct {
	SetStub        func(key string, value string, ttl uint64) (*etcd.Response, error)
	setMutex       sync.RWMutex
	setArgsForCall []struct {
		key   string
		value string
		ttl   uint64
	}
	setReturns struct {
		result1 *etcd.Response
		result2 error
	}
	GetStub        func(key string, sort, recursive bool) (*etcd.Response, error)
	getMutex       sync.RWMutex
	getArgsForCall []struct {
		key       string
		sort      bool
		recursive bool
	}
	getReturns struct {
		result1 *etcd.Response
		result2 error
	}
}

func (fake *EtcdClient) Set(key string, value string, ttl uint64) (*etcd.Response, error) {
	fake.setMutex.Lock()
	fake.setArgsForCall = append(fake.setArgsForCall, struct {
		key   string
		value string
		ttl   uint64
	}{key, value, ttl})
	fake.setMutex.Unlock()
	if fake.SetStub != nil {
		return fake.SetStub(key, value, ttl)
	} else {
		return fake.setReturns.result1, fake.setReturns.result2
	}
}

func (fake *EtcdClient) SetCallCount() int {
	fake.setMutex.RLock()
	defer fake.setMutex.RUnlock()
	return len(fake.setArgsForCall)
}

func (fake *EtcdClient) SetArgsForCall(i int) (string, string, uint64) {
	fake.setMutex.RLock()
	defer fake.setMutex.RUnlock()
	return fake.setArgsForCall[i].key, fake.setArgsForCall[i].value, fake.setArgsForCall[i].ttl
}

func (fake *EtcdClient) SetReturns(result1 *etcd.Response, result2 error) {
	fake.SetStub = nil
	fake.setReturns = struct {
		result1 *etcd.Response
		result2 error
	}{result1, result2}
}

func (fake *EtcdClient) Get(key string, sort bool, recursive bool) (*etcd.Response, error) {
	fake.getMutex.Lock()
	fake.getArgsForCall = append(fake.getArgsForCall, struct {
		key       string
		sort      bool
		recursive bool
	}{key, sort, recursive})
	fake.getMutex.Unlock()
	if fake.GetStub != nil {
		return fake.GetStub(key, sort, recursive)
	} else {
		return fake.getReturns.result1, fake.getReturns.result2
	}
}

func (fake *EtcdClient) GetCallCount() int {
	fake.getMutex.RLock()
	defer fake.getMutex.RUnlock()
	return len(fake.getArgsForCall)
}

func (fake *EtcdClient) GetArgsForCall(i int) (string, bool, bool) {
	fake.getMutex.RLock()
	defer fake.getMutex.RUnlock()
	return fake.getArgsForCall[i].key, fake.getArgsForCall[i].sort, fake.getArgsForCall[i].recursive
}

func (fake *EtcdClient) GetReturns(result1 *etcd.Response, result2 error) {
	fake.GetStub = nil
	fake.getReturns = struct {
		result1 *etcd.Response
		result2 error
	}{result1, result2}
}
